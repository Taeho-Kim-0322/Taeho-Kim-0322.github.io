---
layout: post
title: "시각화"
date: 2021-02-22
author: 단우아범
categories: "머신러닝"
tags:	
cover: "/assets/instacode.png"
---

# 0. 들어가며  
대표적인 시각화 라이브러리 Matplotlib은 매트랩 스타일의 상태 기반 인터페이스와 객체지향 인터페이스라는 두 개의 인터페이스를 제공함.  

- 매트랩 스타일의 인터페이스  
```
plt.figure() #플롯 그림을 생성
# 두 개의 패널 중 첫 번째 패널을 생성하고 현재 축(axis)을 설정
plt.subplot(2,1,1)
plt.plot(x,np,sin(x)

#두 번째 패널을 생성하고 현재 축을 설정
plt.subplot(2,1,2)
plt.plot(x, np.cos(x))
```
이 인터페이스가 상태를 저장한다는 것이 중요함.  
그 덕분에 모든 plt명령어가 적용되는 곳에 있는 "현재"그림과 축을 기록함.  
간단한 플롯에서는 빠르고 편리하지만 문제가 발생할 소지가 많음.  

- 객체지향 인터페이스  
```
#먼저 플롯 그리드를 생성
#ax는 두 개의 축 객체의 배열이 됨

fig, ax = plt.subplots(2)

#적절한 객체에서 plot()메서드를 호출
ax[0].plot(x, np.sin(x))
ax[1].plot(x, np.cos(x))
```
플롯이 복잡해 질 수록, 객체지향을 활용할 수 밖에 없음  


